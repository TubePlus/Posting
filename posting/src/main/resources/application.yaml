server:
  port: 0
  shutdown: graceful

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    shutdown:
      enabled: true


spring:
  kafka:
    consumer:
      bootstrap-servers: plaintext://kafka1:9092,plaintext://kafka2:9092,plaintext://kafka3:9092
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      bootstrap-servers: plaintext://kafka1:9092,plaintext://kafka2:9092,plaintext://kafka3:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  profiles:
    active: local
  application:
    name: POSTING-SERVICE

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 500
      #        show_sql: true
      dialect: org.hibernate.dialect.MySQL5Dialect
    open-in-view: true # false ?? ??? ??

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    groups-order: DESC
    operations-sorter: method
    disable-swagger-default-url: true
    display-request-duration: true
  api-docs:
    path: /api-docs
  show-actuator: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  paths-to-match:
    - /api/v1/**



#  data:
#    redis:
#      host: localhost
#      port: 6379

#  batch:
#    initializer-schema: always